import spacy
from spacy.lang.en import English
import networkx as nx
import matplotlib.pyplot as plt
import json

from allennlp.predictors.predictor import Predictor

# model_url = "https://storage.googleapis.com/allennlp-public-models/coref-spanbert-large-2020.02.27.tar.gz"
# predictor = Predictor.from_path(model_url)
#
# #text = "Musk was born to a Canadian mother and White South African father, and raised in Pretoria, South Africa. He briefly attended the University of Pretoria before moving to Canada at age 17 to avoid conscription. He was enrolled at Queen's University and transferred to the University of Pennsylvania two years later, where he received a bachelor's degree in economics and physics. He moved to California in 1995 to attend Stanford University but decided instead to pursue a business career, co-founding the web software company Zip2 with his brother Kimbal. The startup was acquired by Compaq for $307 million in 1999. The same year, Musk co-founded online bank X.com, which merged with Confinity in 2000 to form PayPal. The company was bought by eBay in 2002 for $1.5 billion."
# text = "David went to the concert. He said it was an amazing experience."
#
# prediction = predictor.predict(document=text)  # get prediction
# print("Clsuters:-")
# for cluster in prediction['clusters']:
#     print(cluster)
#
#
# print('Coref resolved: ',predictor.coref_resolved(text))  # resolved text

def getSentences(text):
    nlp = English()
    nlp.add_pipe('sentencizer')
    document = nlp(text)
    return [sent.text.strip() for sent in document.sents]


def printToken(token):
    print(token.text, "->", token.dep_)

def appendChunk(original, chunk):
    return original + ' ' + chunk

def isRelationCandidate(token):
    deps = ["ROOT", "adj", "attr", "agent", "amod"]
    return any(subs in token.dep_ for subs in deps)

def isConstructionCandidate(token):
    deps = ["compound", "prep", "conj", "mod"]
    return any(subs in token.dep_ for subs in deps)

def processSubjectObjectPairs(tokens):
    subject = ''
    object = ''
    relation = ''
    subjectConstruction = ''
    objectConstruction = ''
    for token in tokens:
        printToken(token)
        if "punct" in token.dep_:
            continue
        if isRelationCandidate(token):
            relation = appendChunk(relation, token.lemma_)
        if isConstructionCandidate(token):
            if subjectConstruction:
                subjectConstruction = appendChunk(subjectConstruction, token.text)
            if objectConstruction:
                objectConstruction = appendChunk(objectConstruction, token.text)
        if "subj" in token.dep_:
            subject = appendChunk(subject, token.text)
            subject = appendChunk(subjectConstruction, subject)
            subjectConstruction = ''
        if "obj" in token.dep_:
            object = appendChunk(object, token.text)
            object = appendChunk(objectConstruction, object)
            objectConstruction = ''

    print (subject.strip(), ",", relation.strip(), ",", object.strip())
    return (subject.strip(), relation.strip(), object.strip())

def processSentence(sentence):
    tokens = nlp_model(sentence)
    return processSubjectObjectPairs(tokens)

def printGraph(triples):
    G = nx.Graph()
    for triple in triples:
        G.add_node(triple[0])
        G.add_node(triple[1])
        G.add_node(triple[2])
        G.add_edge(triple[0], triple[1])
        G.add_edge(triple[1], triple[2])

    pos = nx.spring_layout(G)
    plt.figure()
    nx.draw(G, pos, edge_color='black', width=1, linewidths=3,
            node_size=300, node_color='seagreen', alpha=1,
            labels={node: node for node in G.nodes()})
    plt.axis('off')
    plt.show()

if __name__ == "__main__":

    text = "Donald J. Trump is the very definition of the American success story, " \
           "continually setting the standards of excellence while expanding his interests in real estate, " \
           "sports, and entertainment. He is the archetypal businessman – a deal maker without peer." \
           "Mr. Trump started his business career in an office he shared with his father in Sheepshead Bay, Brooklyn, New York." \
           " He worked with his father for five years, where they were busy making deals together. " \
           "Mr. Trump has been quoted as saying, “My father was my mentor, " \
           "and I learned a tremendous amount about every aspect of the construction industry from him." \
           "” Likewise, Fred C. Trump often stated that “some of my best deals were made by my son, " \
           "Donald...everything he touches seems to turn to gold.” " \
           "Mr. Trump then entered the very different world of Manhattan real estate."
    # loding the model
    model_url = "https://storage.googleapis.com/allennlp-public-models/coref-spanbert-large-2020.02.27.tar.gz"
    predictor = Predictor.from_path(model_url)

    prediction = predictor.predict(document=text)  # get prediction
    print("Clsuters:-")
    for cluster in prediction['clusters']:
        print(cluster)

    modifiedtext = predictor.coref_resolved(text)  # resolved text using allennlp library(Predictor)
    sentences = getSentences(modifiedtext)

    nlp_model = spacy.load('en_core_web_sm')

    triples = []
    print(modifiedtext)
    for sentence in sentences:
        triples.append(processSentence(sentence))

    printGraph(triples)
